<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.exams.dao.ExaminationMapper">
  <resultMap id="BaseResultMap" type="com.test.exams.bean.Examination">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Src" jdbcType="VARCHAR" property="src" />
    <result column="ImgSrc" jdbcType="VARCHAR" property="imgsrc" />
    <result column="Details" jdbcType="VARCHAR" property="details" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="StartTime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="EndTime" jdbcType="TIMESTAMP" property="endtime" />
    <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="Numbers" jdbcType="INTEGER" property="numbers" />
    <result column="IsDone" jdbcType="TINYINT" property="isdone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, Src,Name,Details,ImgSrc, StartTime, EndTime, UpdateTime, Numbers, IsDone
  </sql>
  <select id="selectByExample" parameterType="com.test.exams.bean.ExaminationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from examination
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from examination
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from examination
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.test.exams.bean.ExaminationExample">
    delete from examination
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.test.exams.bean.Examination">
    insert into examination (Id, Src,ImgSrc,Name,Details, StartTime,
      EndTime, UpdateTime, Numbers, 
      IsDone)
    values (#{id,jdbcType=INTEGER}, #{src,jdbcType=VARCHAR}, #{imgsrc,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{details,jdbcType=VARCHAR},#{starttime,jdbcType=TIMESTAMP},
      #{endtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{numbers,jdbcType=INTEGER}, 
      #{isdone,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.test.exams.bean.Examination">
    insert into examination
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="src != null">
        Src,
      </if>
      <if test="imgsrc != null">
        ImgSrc,
      </if>
      <if test="details != null">
        Details,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="starttime != null">
        StartTime,
      </if>
      <if test="endtime != null">
        EndTime,
      </if>
      <if test="updatetime != null">
        UpdateTime,
      </if>
      <if test="numbers != null">
        Numbers,
      </if>
      <if test="isdone != null">
        IsDone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="src != null">
        #{src,jdbcType=VARCHAR},
      </if>
      <if test="imgsrc != null">
        #{imgsrc,jdbcType=VARCHAR},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="numbers != null">
        #{numbers,jdbcType=INTEGER},
      </if>
      <if test="isdone != null">
        #{isdone,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.test.exams.bean.ExaminationExample" resultType="java.lang.Long">
    select count(*) from examination
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update examination
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.src != null">
        Src = #{record.src,jdbcType=VARCHAR},
      </if>
      <if test="record.imgsrc != null">
        ImgSrc = #{record.imgsrc,jdbcType=VARCHAR},
      </if>
      <if test="record.details != null">
        Details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null">
        StartTime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null">
        EndTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        UpdateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.numbers != null">
        Numbers = #{record.numbers,jdbcType=INTEGER},
      </if>
      <if test="record.isdone != null">
        IsDone = #{record.isdone,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update examination
    set Id = #{record.id,jdbcType=INTEGER},
      Src = #{record.src,jdbcType=VARCHAR},
      ImgSrc = #{record.imgsrc,jdbcType=VARCHAR},
      Details = #{record.details,jdbcType=VARCHAR},
      Name = #{record.name,jdbcType=VARCHAR},
      StartTime = #{record.starttime,jdbcType=TIMESTAMP},
      EndTime = #{record.endtime,jdbcType=TIMESTAMP},
      UpdateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      Numbers = #{record.numbers,jdbcType=INTEGER},
      IsDone = #{record.isdone,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.exams.bean.Examination">
    update examination
    <set>
      <if test="src != null">
        Src = #{src,jdbcType=VARCHAR},
      </if>
      <if test="src != null">
        ImgSrc = #{imgsrc,jdbcType=VARCHAR},
      </if>
      <if test="src != null">
        Details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="src != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        StartTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null">
        EndTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="numbers != null">
        Numbers = #{numbers,jdbcType=INTEGER},
      </if>
      <if test="isdone != null">
        IsDone = #{isdone,jdbcType=TINYINT},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.exams.bean.Examination">
    update examination
    set Src = #{src,jdbcType=VARCHAR},
      ImgSrc = #{imgsrc,jdbcType=VARCHAR},
      Details = #{details,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      StartTime = #{starttime,jdbcType=TIMESTAMP},
      EndTime = #{endtime,jdbcType=TIMESTAMP},
      UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      Numbers = #{numbers,jdbcType=INTEGER},
      IsDone = #{isdone,jdbcType=TINYINT}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>